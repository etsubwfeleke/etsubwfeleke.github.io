<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Etsub Feleke</title>
        <link>https://etsubwfeleke.github.io/</link>
        <description>This is my KeepIt site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 13 Jun 2025 16:26:52 -0500</lastBuildDate>
            <atom:link href="https://etsubwfeleke.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>PyTorch Eye Blink Tracker Pt.2</title>
    <link>https://etsubwfeleke.github.io/itracker_cnn/</link>
    <pubDate>Fri, 13 Jun 2025 16:26:52 -0500</pubDate>
    <author>Author</author>
    <guid>https://etsubwfeleke.github.io/itracker_cnn/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/eyeblink_project/minst.png" referrerpolicy="no-referrer">
            </div><h2 id="cnn-data-handling-and-minst-dataset">CNN, Data Handling and MINST dataset</h2>
<p>In part one we learned basics of pytorch and built a simple linear model. In this part we will build a CNN model, learn how to handle data and use the MINST dataset.</p>
<h3 id="convolutional-neural-networks-cnns">Convolutional Neural Networks (CNNs)</h3>
<p>CNNs are a type of neural network that are particularly well-suited for image data. They use convolutional layers to automatically and adaptively learn spatial hierarchies of features from input images. This makes them very effective for tasks such as image classification, object detection, and more.</p>]]></description>
</item>
<item>
    <title>PyTorch Eye Blink Tracker Pt.1</title>
    <link>https://etsubwfeleke.github.io/itracker/</link>
    <pubDate>Thu, 05 Jun 2025 20:46:35 -0500</pubDate>
    <author>Author</author>
    <guid>https://etsubwfeleke.github.io/itracker/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/eyeblink_project/CNN.png" referrerpolicy="no-referrer">
            </div><h2 id="pytorch-fundamentals">PyTorch Fundamentals</h2>
<p>Before delving into the depths of deep learning—pun intended—it&rsquo;s crucial to grasp the foundational aspects that pave the way. This will be a journal of sorts to document my learning experience as I figure out how to build an eye blink tracker using PyTorch from scratch.</p>
<h2 id="what-is-pytorch">What is PyTorch?</h2>
<p>PyTorch is a powerful open-source machine learning library that provides a flexible and efficient platform for building deep learning models. It is particularly well-suited for tasks involving computer vision, natural language processing, and reinforcement learning.
PyTorch operates on tensors, akin to numpy arrays but optimized for GPU-accelerated computing. This efficiency boost—up to 100 times faster than CPUs—is due to GPUs&rsquo; inherent computational prowess.
hugo</p>]]></description>
</item>
<item>
    <title>Global CO₂ Emissions Predictions: A Machine Learning Approach</title>
    <link>https://etsubwfeleke.github.io/co2_predictions/</link>
    <pubDate>Sat, 05 Apr 2025 20:46:35 -0500</pubDate>
    <author>Author</author>
    <guid>https://etsubwfeleke.github.io/co2_predictions/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/co2/co2.jpg" referrerpolicy="no-referrer">
            </div><p>As part of my data science journey, I took on a challenge that blends environmental urgency with machine learning: forecasting global CO₂ emissions. Using a Kaggle dataset spanning over 200 years and covering 190+ countries, I explored time-series forecasting techniques to understand historical patterns and predict future emissions. With models like Random Forest and ARIMA, I experimented, learned, and iterated—uncovering both the power and limitations of predictive modeling in the climate domain.</p>]]></description>
</item>
<item>
    <title>Predictive_modeling</title>
    <link>https://etsubwfeleke.github.io/predictive_modeling/</link>
    <pubDate>Fri, 14 Mar 2025 14:18:53 -0500</pubDate>
    <author>Author</author>
    <guid>https://etsubwfeleke.github.io/predictive_modeling/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/pred_mod/dataset-cover.png" referrerpolicy="no-referrer">
            </div><h2 id="learning-to-predict-housing-market-trends-with-machine-learning">Learning to Predict Housing Market Trends with Machine Learning</h2>
<p>In the competitive world of real estate, understanding market trends and forecasting sales performance can lead to smarter investment decisions and better risk planning. As part of my self-guided learning in predictive modeling, I explored housing market data to simulate the kind of analysis a real estate analytics team might perform.</p>
<p>Using a global housing market dataset from Kaggle (2015–2024), I applied machine learning techniques to build models that could forecast sales trends and surface key drivers of market movement. The goal was to push beyond theory and create something with real-world relevance—and showcase how data science can inform strategic decisions.</p>]]></description>
</item>
<item>
    <title>Affordable Education in Europe</title>
    <link>https://etsubwfeleke.github.io/affordable-europe/</link>
    <pubDate>Sun, 02 Mar 2025 20:46:35 -0500</pubDate>
    <author>Author</author>
    <guid>https://etsubwfeleke.github.io/affordable-europe/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/europe-schools/featured-image.png" referrerpolicy="no-referrer">
            </div><h2 id="affordable-education-in-europe-vs-education-quality">Affordable Education in Europe vs. Education Quality:</h2>
<p><em><strong>The Best Bang for Your Buck</strong></em></p>
<h2 id="introduction">Introduction</h2>
<p>Hello <strong>#DataFam</strong>!</p>
<p>I’m thrilled to share my <strong>first-ever personal data visualization project</strong> created during my data visualization course at the <strong>University of North Texas</strong>! In this project, I analyzed a dataset that explores <strong>education expenses across European countries</strong>, focusing on how affordability correlates with <strong>education quality</strong>.</p>
<hr>
<h2 id="research-questions">Research Questions</h2>
<ol>
<li>Which countries provide the most <strong>budget-friendly</strong> education options, considering tuition <strong>and</strong> living costs?</li>
<li>What is the <strong>average tuition fee</strong> across these countries?</li>
<li>How does the <strong>cost</strong> compare to the <strong>quality</strong> of education provided?</li>
</ol>
<hr>
<h2 id="key-insights">Key Insights</h2>
<p><strong>Cost &amp; Living Expenses Matter</strong>: When considering affordable education in Europe, both <strong>tuition fees</strong> and <strong>living costs</strong> must be considered together.</p>]]></description>
</item>
<item>
    <title>Web_scraping</title>
    <link>https://etsubwfeleke.github.io/web_scraping/</link>
    <pubDate>Thu, 14 Nov 2024 14:51:06 -0500</pubDate>
    <author>Author</author>
    <guid>https://etsubwfeleke.github.io/web_scraping/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/web_scraping/beautifulsoup.png" referrerpolicy="no-referrer">
            </div><h2 id="exploring-web-scraping-with-beautiful-soup-and-requests-a-learning-journey">Exploring Web Scraping with Beautiful Soup and Requests: A Learning Journey</h2>
<p>Understanding web scraping techniques is essential for data science. The goal was to extract structured data from a real-world website, specifically focusing on the World Economic Forum&rsquo;s Wikipedia page. This hands-on experience allowed me to learn how to programmatically interact with web content and parse HTML to gather information.</p>
<h3 id="the-tools-requests-and-beautiful-soup">The Tools: Requests and Beautiful Soup</h3>
<p>I chose to use two powerful Python libraries for this project: <code>requests</code> for making HTTP requests to fetch web pages, and <code>BeautifulSoup</code> for parsing the HTML content.</p>]]></description>
</item>
</channel>
</rss>
